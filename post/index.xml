<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Uhkrowi</title>
    <link>/post/</link>
    <description>Recent content in Posts on Uhkrowi</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Nurul Uhkrowi</copyright>
    <lastBuildDate>Wed, 16 Mar 2022 02:13:50 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DS: Array</title>
      <link>/ds-array/</link>
      <pubDate>Wed, 16 Mar 2022 02:13:50 +0000</pubDate>
      
      <guid>/ds-array/</guid>
      <description>Array is a collection of items that stored at contiguous memory location, its a static linear non-primitive data structure, the purpose of array is to store multiple element of the same type. Each item of the array is commonly called ‘element of array’, and every element has its own index of its sequence where you can use it as a key to peek the element you want to see, the indexes start from zero or also known as zero base.</description>
    </item>
    
    <item>
      <title>DS Intro</title>
      <link>/ds-intro/</link>
      <pubDate>Tue, 15 Mar 2022 02:13:50 +0000</pubDate>
      
      <guid>/ds-intro/</guid>
      <description>Data structure is a systematic way to store and organize data in order to use it efficiently in time (how long the time it takes) and/or space (memory allocation), in other words it a way how you manage data with usage of memory as small as possible and with execution time as little as possible.
Data structure is agnostic or independent from programming languages, so you can implement the idea in any language you want, it’s also provides operations to organize the data easily.</description>
    </item>
    
    <item>
      <title>Fully rounded canvas of an image</title>
      <link>/rounded-image-canvas/</link>
      <pubDate>Fri, 11 Mar 2022 02:13:50 +0000</pubDate>
      
      <guid>/rounded-image-canvas/</guid>
      <description>1// create new image element 2const image = new Image(); 3image.src = &amp;#34;/images/sample.jpg&amp;#34;; 4 5// create canvas element 6const canvas = document.createElement(&amp;#34;canvas&amp;#34;); 7 8// set width and height of the canvas 9canvas.width = 100; 10canvas.height = 100; 11 12// context 13let ctx = canvas.getContext(&amp;#34;2d&amp;#34;); 14 15// background purpose 16ctx.fillStyle = &amp;#34;white&amp;#34;; 17ctx.fillRect(0, 0, canvas.width, canvas.height); 18ctx.save(); 19 20// cropping 21ctx.beginPath(); 22ctx.arc(50, 50, 50, 0, Math.PI * 2, true); 23ctx.closePath(); 24ctx.</description>
    </item>
    
    <item>
      <title>Get base64 from URL</title>
      <link>/base64-from-url/</link>
      <pubDate>Fri, 11 Mar 2022 02:13:50 +0000</pubDate>
      
      <guid>/base64-from-url/</guid>
      <description> 1async function getBase64FromUrl(URL) { 2 const data = await fetch(URL); 3 const blob = await data.blob(); 4 return new Promise((resolve) =&amp;gt; { 5 const reader = new FileReader(); 6 reader.readAsDataURL(blob); 7 reader.onloadend = () =&amp;gt; { 8 const base64data = reader.result; 9 resolve(base64data); 10 }; 11 }); 12}; </description>
    </item>
    
    <item>
      <title>Generate CV with PDFmake</title>
      <link>/generate-pdf-with-pdfmake/</link>
      <pubDate>Wed, 09 Mar 2022 02:13:50 +0000</pubDate>
      
      <guid>/generate-pdf-with-pdfmake/</guid>
      <description>In this personal site I decided to generate my CV myself rather than taking up from URL of another website (e.g you could get generated CV from kalibrr.com).
In my previous project I did the job, generating pdf of documents is pretty simple, there’re some packages you could use out there, one of them is PDFmake.
PDFmake is a package that helps you to generate PDF for server-side and client-side usage in pure JavaScript (read its documentation here), it’s a powerful tool yet easy to use, it has a playground too for you to try it online.</description>
    </item>
    
    <item>
      <title>Stored Procedure</title>
      <link>/stored-procedure/</link>
      <pubDate>Sun, 27 Feb 2022 02:13:50 +0000</pubDate>
      
      <guid>/stored-procedure/</guid>
      <description>Recently I have to work with stored procedures for a pretty huge monolith project, it’s not something new for me but I’ve been leaving it for a quite long time so I need to refresh my knowledge.
To get it simplified, stored procedure is just a bunch of SQL queries that wrapped and can be executed with a single command (you can also call functions in it when you have several common tasks to run).</description>
    </item>
    
    <item>
      <title>Styling with tailwindcss in Quasar</title>
      <link>/styling-with-tailwindcss-in-quasar/</link>
      <pubDate>Tue, 15 Feb 2022 02:13:50 +0000</pubDate>
      
      <guid>/styling-with-tailwindcss-in-quasar/</guid>
      <description>I’ve been working with Quasar and Tailwind for some projects, both are really helpful tools, sometimes I need to style my Quasar app with Tailwind because I feel more comfort with Tailwind for styling and I love how it works.
It’s quite simple to integrate Tailwind to Quasar, you just need to do some little configurations.
Open your Quasar project in terminal and run these commands.
1yarn add -D tailwindcss &amp;amp; npx tailwindcss init There will be a new file named tailwind.</description>
    </item>
    
    <item>
      <title>Headless WordPress Introduction</title>
      <link>/headless-wordpress-intro/</link>
      <pubDate>Sun, 13 Feb 2022 02:13:50 +0000</pubDate>
      
      <guid>/headless-wordpress-intro/</guid>
      <description>I think every web developer know WordPress is, in a nutshell it’s a popular content management system built with php that allows you to manage &amp;amp; manipulate posts, pages, custom post types, categories and more. You can create themes of the web you build with WordPress, it’s quite simple but I don’t want to talk about it now.
One of advantages of WordPress is that it can be a headless CMS, headless means that you don’t need html structure in the CMS or you can say the CMS system is separated with its frontend, in other word you just consume data thru its REST API so you could do CRUD with another frontend stack solutions or integrate it to your another app.</description>
    </item>
    
  </channel>
</rss>
